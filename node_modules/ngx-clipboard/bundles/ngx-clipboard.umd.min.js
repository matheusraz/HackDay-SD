!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/platform-browser"),require("ngx-window-token"),require("@angular/common")):"function"==typeof define&&define.amd?define("ngx-clipboard",["exports","@angular/core","@angular/platform-browser","ngx-window-token","@angular/common"],e):e(t["ngx-clipboard"]={},t.ng.core,t.ng.platformBrowser,null,t.ng.common)}(this,function(t,e,r,n,o){"use strict";var i=function(){function t(t,e){this.document=t,this.window=e}return Object.defineProperty(t.prototype,"isSupported",{get:function(){return!!this.document.queryCommandSupported&&!!this.document.queryCommandSupported("copy")},enumerable:!0,configurable:!0}),t.prototype.isTargetValid=function(t){if(t instanceof HTMLInputElement||t instanceof HTMLTextAreaElement){if(t.hasAttribute("disabled"))throw new Error('Invalid "target" attribute. Please use "readonly" instead of "disabled" attribute');return!0}throw new Error("Target should be input or textarea")},t.prototype.copyFromInputElement=function(t){try{this.selectTarget(t);var e=this.copyText();return this.clearSelection(t,this.window),e}catch(r){return!1}},t.prototype.copyFromContent=function(t){return this.tempTextArea||(this.tempTextArea=this.createTempTextArea(this.document,this.window),this.document.body.appendChild(this.tempTextArea)),this.tempTextArea.value=t,this.copyFromInputElement(this.tempTextArea)},t.prototype.destroy=function(){this.tempTextArea&&(this.document.body.removeChild(this.tempTextArea),this.tempTextArea=undefined)},t.prototype.selectTarget=function(t){return t.select(),t.setSelectionRange(0,t.value.length),t.value.length},t.prototype.copyText=function(){return this.document.execCommand("copy")},t.prototype.clearSelection=function(t,e){t&&t.blur(),e.getSelection().removeAllRanges()},t.prototype.createTempTextArea=function(t,e){var r,n="rtl"===t.documentElement.getAttribute("dir");(r=t.createElement("textarea")).style.fontSize="12pt",r.style.border="0",r.style.padding="0",r.style.margin="0",r.style.position="absolute",r.style[n?"right":"left"]="-9999px";var o=e.pageYOffset||t.documentElement.scrollTop;return r.style.top=o+"px",r.setAttribute("readonly",""),r},t.decorators=[{type:e.Injectable}],t.ctorParameters=function(){return[{type:undefined,decorators:[{type:e.Inject,args:[r.DOCUMENT]}]},{type:undefined,decorators:[{type:e.Inject,args:[n.WINDOW]}]}]},t}();function s(t,e,r){return r||new i(t,e)}var a={deps:[r.DOCUMENT,n.WINDOW,[new e.Optional,new e.SkipSelf,i]],provide:i,useFactory:s},c=function(){function t(t){this.clipboardSrv=t,this.cbOnSuccess=new e.EventEmitter,this.cbOnError=new e.EventEmitter}return t.prototype.ngOnInit=function(){},t.prototype.ngOnDestroy=function(){this.clipboardSrv.destroy()},t.prototype.onClick=function(t){this.clipboardSrv.isSupported?this.targetElm&&this.clipboardSrv.isTargetValid(this.targetElm)?this.handleResult(this.clipboardSrv.copyFromInputElement(this.targetElm),this.targetElm.value):this.cbContent&&this.handleResult(this.clipboardSrv.copyFromContent(this.cbContent),this.cbContent):this.handleResult(!1,undefined)},t.prototype.handleResult=function(t,e){t?this.cbOnSuccess.emit({isSuccess:!0,content:e}):this.cbOnError.emit({isSuccess:!1})},t.decorators=[{type:e.Directive,args:[{selector:"[ngxClipboard]"}]}],t.ctorParameters=function(){return[{type:i}]},t.propDecorators={targetElm:[{type:e.Input,args:["ngxClipboard"]}],cbContent:[{type:e.Input}],cbOnSuccess:[{type:e.Output}],cbOnError:[{type:e.Output}],onClick:[{type:e.HostListener,args:["click",["$event.target"]]}]},t}(),p=function(){function t(){}return t.decorators=[{type:e.NgModule,args:[{imports:[o.CommonModule,n.NgxWindowTokenModule],declarations:[c],exports:[c],providers:[a]}]}],t}();t.ClipboardService=i,t.CLIPBOARD_SERVICE_PROVIDER_FACTORY=s,t.CLIPBOARD_SERVICE_PROVIDER=a,t.ClipboardDirective=c,t.ClipboardModule=p,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-clipboard.umd.min.js.map